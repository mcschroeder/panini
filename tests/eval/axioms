assert : { b:𝔹 | b = true } → 𝟙

-- boolean operations
and : (a:𝔹) → (b:𝔹) → {c:𝔹 | c = true ⟺ (a = true ∧ b = true)}
or : (a:𝔹) → (b:𝔹) → {c:𝔹 | c = true ⟺ (a = true ∨ b = true)}
not : (a:𝔹) → {b:𝔹 | b = ¬a}

-- integer operations
eq : (a:ℤ) → (b:ℤ) → {c:𝔹 | c = true ⟺ a = b}
le : (a:ℤ) → (b:ℤ) → {c:𝔹 | c = true ⟺ a ≤ b}
lt : (a:ℤ) → (b:ℤ) → {c:𝔹 | c = true ⟺ a < b}
ge : (a:ℤ) → (b:ℤ) → {c:𝔹 | c = true ⟺ a ≥ b}
gt : (a:ℤ) → (b:ℤ) → {c:𝔹 | c = true ⟺ a > b}
add : (a:ℤ) → (b:ℤ) → {c:ℤ | c = a + b}
sub : (a:ℤ) → (b:ℤ) → {c:ℤ | c = a - b}

-- string operations
match : (s:𝕊) → (t:𝕊) → {b:𝔹 | b = true ⟺ s = t}
length : (s:𝕊) → {n:ℤ | n = |s|}
charAt : (s:𝕊) → {i:ℤ | i ≥ 0 ∧ i < |s|} → {t:ℂ𝕙 | t = s[i]}
slice : (s:𝕊) → {i:ℤ | i ≥ 0 ∧ i < |s|} → {j:ℤ | i ≤ j  ∧ j < |s|} → {t:𝕊 | t = s[i..j]}
eqChar : (a:ℂ𝕙) → (b:ℂ𝕙) → {c:𝔹 | c = true ⟺ a = b}
index : (s:𝕊) → (c:ℂ𝕙) → {i:ℤ | i = firstIndexOfChar(s,c)}
