diff --git a/Dockerfile b/Dockerfile
index aea5592..1589ae7 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -102,4 +102,4 @@ RUN cd /stalagmite/klee && \
 	  .. && \
 	make -j${nproc}
 
-ENTRYPOINT ["/stalagmite/docker_entrypoint.sh"]
\ No newline at end of file
+CMD cd /stalagmite/eval && ./run_eval.sh
\ No newline at end of file
diff --git a/eval/subject.py b/eval/subject.py
index 774f443..4bf302f 100644
--- a/eval/subject.py
+++ b/eval/subject.py
@@ -19,7 +19,7 @@ class Subject:
     def __init__(self, subject: str):
         self.subject = subject
         self.subject_dir = os.path.join(config.root, f'subjects/{subject}')
-        self.run_id = get_next_run_id(os.path.join(config.root, f'data/subjects/{subject}'))
+        self.run_id = "1"
         self.run_dir = os.path.join(config.root, f'data/subjects/{subject}/{self.run_id}')
         self.run_grammar_dir = os.path.join(self.run_dir, 'grammars/')
         self.run_eval_dir = os.path.join(self.run_dir, 'eval/')
diff --git a/system_level_grammar/reduce_overapproximation.py b/system_level_grammar/reduce_overapproximation.py
index 9a3df22..f45fdca 100644
--- a/system_level_grammar/reduce_overapproximation.py
+++ b/system_level_grammar/reduce_overapproximation.py
@@ -127,7 +127,7 @@ class GrammarRefiner:
         valid = set()
         invalid = set()
         i = 0
-        while i < count or len(valid) < config.min_count_valid:
+        while i < count or (len(valid) < config.min_count_valid and len(invalid) < 1):
             signal.signal(signal.SIGALRM, fuzz_alarm_handler)
             signal.alarm(1)
             try:
@@ -139,7 +139,8 @@ class GrammarRefiner:
                 signal.alarm(0)
 
             can_parse = put_can_parse(self.put, inp)
-            if can_parse == None: continue # core dumped, e.g. div-by-zero / semantic error
+            if can_parse == None: # core dumped, e.g. div-by-zero / semantic error
+                invalid.add(inp)
             elif can_parse == False:
                 invalid.add(inp)
             else:
